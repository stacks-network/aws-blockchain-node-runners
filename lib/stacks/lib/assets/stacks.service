## Modeled after https://github.com/bitcoin/bitcoin/blob/master/contrib/init/bitcoind.service

[Unit]
Description=Stacks daemon
# https://www.freedesktop.org/wiki/Software/systemd/NetworkTarget/
After=network-online.target
Wants=network-online.target

ConditionFileIsExecutable=/usr/local/bin/stacks-node
ConditionPathExists=/etc/stacks/stacks.toml
ConditionPathIsDirectory=/var/lib/stacks

[Service]
ExecStart=/usr/local/bin/stacks-node start --config /etc/stacks/stacks.toml
StandardOutput=append:/var/log/stacks/stacks.log
StandardError=inherit

# Make sure the config directory is readable by the service user
PermissionsStartOnly=true
ExecStartPre=/bin/chgrp stacks /etc/stacks/

# Process management
####################

Type=simple
PIDFile=/run/stacks/stacks.pid

Restart=on-failure
TimeoutStartSec=infinity
TimeoutStopSec=600
KillSignal=SIGINT
SendSIGKILL=no

# Directory creation and permissions
####################################

# Run as stacks:stacks
User=stacks
Group=stacks

# /var/lib/stacks
StateDirectory=stacks
StateDirectoryMode=0710

# /var/log/stacks
LogsDirectory=stacks
LogsDirectoryMode=0710

# /run/stacks
RuntimeDirectory=stacks
RuntimeDirectoryMode=0710

# /etc/stacks
ConfigurationDirectory=stacks
ConfigurationDirectoryMode=0710

# Hardening measures
####################

# Provide a private /tmp and /var/tmp.
PrivateTmp=true

# Mount /usr, /boot/ and /etc read-only for the process.
ProtectSystem=full

# Deny access to /home, /root and /run/user
ProtectHome=true

# Disallow the process and all of its children to gain
# new privileges through execve().
NoNewPrivileges=true

# Use a new /dev namespace only populated with API pseudo devices
# such as /dev/null, /dev/zero and /dev/random.
PrivateDevices=true

# Deny the creation of writable and executable memory mappings.
MemoryDenyWriteExecute=true
SystemCallArchitectures=native

[Install]
WantedBy=multi-user.target
